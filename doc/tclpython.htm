<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<!-- $Id: tclpython.htm,v 1.6 2005/04/23 14:58:02 jfontain Exp $ -->
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Author" content="Jean-Luc Fontaine">
   <meta name="Description" content="tclpython Python package for Tcl">
   <title>tclpython Python package for Tcl</title>
</head>
<body>

<center>
<h1>tclpython</h1>
<h2>a Python package for Tcl</h2>
</center>

<br>
<br>
<br>
<p>This package allows the execution of Python code from a Tcl interpreter, as in:

<table bgcolor="#DFDFDF" width="100%"><tr><td><pre>
package require tclpython 4
set interpreter [python::interp new]
$interpreter exec {print("Hello World")}
puts [$interpreter eval 3/2.0]
python::interp delete $interpreter
</pre></td><tr></table>

which outputs:

<table bgcolor="#DFDFDF" width="100%"><tr><td><pre>
Hello World
1.5
</pre></td><tr></table>

<p>and, starting with version 4.0, execution of Tcl code from Python interpreters, as in:

<table bgcolor="#DFDFDF" width="100%"><tr><td><pre>
package require tclpython 4
set interpreter [python::interp new]
puts [$interpreter eval {tcl.eval('clock format [clock seconds]')}]
python::interp delete $interpreter
</pre></td><tr></table>

<p>It works by creating one or more embedded Python interpreters and sending them strings to evaluate or execute. Modules can be loaded in the Python interpreter as if it were the real Python program.

<p>The commands created by the package are very simple:<ul>
  <li><b>python::interp new</b>
  <li><b>python::interp delete</b> <i>interpreter</i>
  <li><i>interpreter</i> <b>eval</b> <i>script</i>
  <li><i>interpreter</i> <b>exec</b> <i>script</i>
</ul>

<p>As expected, <b>eval</b> returns the Python interpreter result or reports an error at the Tcl level when the Python interpreter itself fails in executing the code string, while <b>exec</b> simply lets the Python interpreter execute the code and returns nothing or eventually report an error.

<p>You can create several Python interpreters, if the <i>tclpython</i> package was linked against a Python library compiled with threads support, otherwise only 1 Python interpreter can exist at a time.

<p><i><b>Notes:</b><ul>
<li>for Python 2.2 and above, the automatic <b>import site</b> on a new thread is suppressed because it otherwise makes the program hang (you can still use <b>import site</b> in your code, as described at the top of the <b>Lib/site.py</b> file).
<li>on a <b>Redhat</b> system, use the tclpython <b>rpm</b> on my homepage.
<li>tclpython is used by the <b>moodss</b> system monitoring software (information on my homepage) to allow its modules to be written in Python as well as Tcl and Perl.</i>
</ul>

<h3>Upgrading from tclpython version 2</h3>

<p>In tclpython version 2, only the <b>eval</b> command was available to an interpreter. Some such invocations, generally that return nothing, need to be converted to the <b>exec</b> command, as the following examples show:<ul>
<li><table bgcolor="#DFDFDF" width="100%"><tr><td><pre>
$interpreter eval {print("Hello World")} ;# version 2
$interpreter exec {print("Hello World")} ;# version 3 or 4
</pre></td><tr></table>
<li><table bgcolor="#DFDFDF" width="100%"><tr><td><pre>
$interpreter eval {def initialize(): pass} ;# version 2
$interpreter exec {def initialize(): pass} ;# version 3 or 4
</pre></td><tr></table>
<li><table bgcolor="#DFDFDF" width="100%"><tr><td><pre>
# version 2:
set exists [$interpreter eval "try: type(initialize) == FunctionType\nexcept: 0"]
# version 3 or 4:
$interpreter exec "try: result = (type(initialize) == FunctionType)\nexcept: result = 0"
set exists [$interpreter eval result]
</pre></td><tr></table>
</ul>

<p>Send your comments, complaints, ... to <a href="mailto:jfontain@free.fr">jfontain@free.fr</a>.
<br>My homepage is at <a href="http://jfontain.free.fr/">http://jfontain.free.fr/</a>.


</body>
</html>
